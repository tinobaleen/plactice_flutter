// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: to_client.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_SYSTEM_MESSAGE MessageType = 0
	MessageType_HUMAN_MESSAGE  MessageType = 1
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "SYSTEM_MESSAGE",
		1: "HUMAN_MESSAGE",
	}
	MessageType_value = map[string]int32{
		"SYSTEM_MESSAGE": 0,
		"HUMAN_MESSAGE":  1,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_to_client_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_to_client_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_to_client_proto_rawDescGZIP(), []int{0}
}

type ChatMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageRequest) Reset() {
	*x = ChatMessageRequest{}
	mi := &file_to_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageRequest) ProtoMessage() {}

func (x *ChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_to_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_to_client_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChatMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgType       MessageType            `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3,enum=conenctrpc.to_client.v1.MessageType" json:"msg_type,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageResponse) Reset() {
	*x = ChatMessageResponse{}
	mi := &file_to_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageResponse) ProtoMessage() {}

func (x *ChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_to_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageResponse.ProtoReflect.Descriptor instead.
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_to_client_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessageResponse) GetMsgType() MessageType {
	if x != nil {
		return x.MsgType
	}
	return MessageType_SYSTEM_MESSAGE
}

func (x *ChatMessageResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatMessageResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_to_client_proto protoreflect.FileDescriptor

const file_to_client_proto_rawDesc = "" +
	"\n" +
	"\x0fto_client.proto\x12\x17conenctrpc.to_client.v1\"G\n" +
	"\x12ChatMessageRequest\x12\x17\n" +
	"\achat_id\x18\x01 \x01(\tR\x06chatId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"\x89\x01\n" +
	"\x13ChatMessageResponse\x12?\n" +
	"\bmsg_type\x18\x01 \x01(\x0e2$.conenctrpc.to_client.v1.MessageTypeR\amsgType\x12\x17\n" +
	"\achat_id\x18\x02 \x01(\tR\x06chatId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent*4\n" +
	"\vMessageType\x12\x12\n" +
	"\x0eSYSTEM_MESSAGE\x10\x00\x12\x11\n" +
	"\rHUMAN_MESSAGE\x10\x012\x84\x01\n" +
	"\x13ChatMesssageService\x12m\n" +
	"\x0eMessageRequest\x12+.conenctrpc.to_client.v1.ChatMessageRequest\x1a,.conenctrpc.to_client.v1.ChatMessageResponse0\x01B\xc5\x01\n" +
	"\x1bcom.conenctrpc.to_client.v1B\rToClientProtoP\x01Z\x1dbff/internal/gen/to_client/v1\xa2\x02\x03CTX\xaa\x02\x16Conenctrpc.ToClient.V1\xca\x02\x16Conenctrpc\\ToClient\\V1\xe2\x02\"Conenctrpc\\ToClient\\V1\\GPBMetadata\xea\x02\x18Conenctrpc::ToClient::V1b\x06proto3"

var (
	file_to_client_proto_rawDescOnce sync.Once
	file_to_client_proto_rawDescData []byte
)

func file_to_client_proto_rawDescGZIP() []byte {
	file_to_client_proto_rawDescOnce.Do(func() {
		file_to_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_to_client_proto_rawDesc), len(file_to_client_proto_rawDesc)))
	})
	return file_to_client_proto_rawDescData
}

var file_to_client_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_to_client_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_to_client_proto_goTypes = []any{
	(MessageType)(0),            // 0: conenctrpc.to_client.v1.MessageType
	(*ChatMessageRequest)(nil),  // 1: conenctrpc.to_client.v1.ChatMessageRequest
	(*ChatMessageResponse)(nil), // 2: conenctrpc.to_client.v1.ChatMessageResponse
}
var file_to_client_proto_depIdxs = []int32{
	0, // 0: conenctrpc.to_client.v1.ChatMessageResponse.msg_type:type_name -> conenctrpc.to_client.v1.MessageType
	1, // 1: conenctrpc.to_client.v1.ChatMesssageService.MessageRequest:input_type -> conenctrpc.to_client.v1.ChatMessageRequest
	2, // 2: conenctrpc.to_client.v1.ChatMesssageService.MessageRequest:output_type -> conenctrpc.to_client.v1.ChatMessageResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_to_client_proto_init() }
func file_to_client_proto_init() {
	if File_to_client_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_to_client_proto_rawDesc), len(file_to_client_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_to_client_proto_goTypes,
		DependencyIndexes: file_to_client_proto_depIdxs,
		EnumInfos:         file_to_client_proto_enumTypes,
		MessageInfos:      file_to_client_proto_msgTypes,
	}.Build()
	File_to_client_proto = out.File
	file_to_client_proto_goTypes = nil
	file_to_client_proto_depIdxs = nil
}
